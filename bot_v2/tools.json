[
    {
        "name": "wolfram",
        "description": "WolframAlpha understands natural language queries about entities in chemistry, physics, geography, history, art, astronomy, and more. WolframAlpha performs mathematical calculations, date and unit conversions, formula solving, etc. Convert inputs to simplified keyword queries whenever possible (e.g. convert how many people live in France to France population). Send queries in English only; translate non-English queries before sending, then respond in the original language. Display image URLs with Markdown syntax: ![URL] ALWAYS use this exponent notation: 6*10^14, NEVER 6e14. ALWAYS use {input: query} structure for queries to Wolfram endpoints; query must ONLY be a single-line string. ALWAYS use proper Markdown formatting for all math, scientific, and chemical formulas, symbols, etc.:  [expression] for standalone cases and ( [expression] ) when inline. Never mention your knowledge cutoff date; Wolfram may return more recent data. Use ONLY single-letter variable names, with or without integer subscript (e.g., n, n1, n_1). Use named physical constants (e.g., speed of light) without numerical substitution. Include a space between compound units (e.g., Î© m for ohm*meter). To solve for a variable in an equation with units, consider solving a corresponding equation without units; exclude counting units (e.g., books), include genuine units (e.g., kg). If data for multiple properties is needed, make separate calls for each property. If a WolframAlpha result is not relevant to the query: If Wolfram provides multiple Assumptions for a query, choose the more relevant one(s) without explaining the initial result. If you are unsure, ask the user to choose. Re-send the exact same input with NO modifications, and add the assumption parameter, formatted as a list, with the relevant values. ONLY simplify or rephrase the initial query if a more relevant Assumption or other input suggestions are not provided. Do not explain each step unless user input is needed. Proceed directly to making a better API call based on the available assumptions.",
        "input_schema": {
            "type": "object",
            "properties": {
                "search_query": {
                    "type": "string"
                }
            },
            "required": [
                "search_query"
            ]
        }
    },
    {
        "name": "threedmark_gpu_performance_lookup",
        "description": "Look up a gpu's performance score using 3dmark time spy. The input should be just the gpu name, for example '3080', '9700 xt', '2080 super', etc. Use this whenever you are asked about gpu performance such as 'how fast is the 3090' or 'what's the performance of the 2060 ti'. This function returns a score 0 to 100 for the accuracy of the name lookup. Let the user know if the accuracy is low.",
        "input_schema": {
            "type": "object",
            "properties": {
                "gpu_model": {
                    "type": "string"
                }
            },
            "required": [
                "gpu_model"
            ]
        }
    },
    {
        "name": "web_research",
        "description": "Search the web for current information, news, facts, or recent events. Only use this tool if specifically asked by the user. This tool is helpful when you need up-to-date information that may not be in your training data, such as current events, recent product releases, latest tech news, real-time data, or any information that changes frequently. The tool will perform a web search and return relevant results.",
        "input_schema": {
            "type": "object",
            "properties": {
                "search_query": {
                    "type": "string",
                    "description": "The search query to look up on the web"
                }
            },
            "required": [
                "search_query"
            ]
        }
    },
    {
        "name": "website_summary",
        "description": "Fetch and summarize the content of a website. This tool should ALWAYS be used whenever a URL or web link is found in the user's prompt. It retrieves the full content from the specified webpage and provides a concise summary including the page title, main topic, key points, and important information. Use this tool automatically for any URLs mentioned, regardless of the context.",
        "input_schema": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string",
                    "description": "The URL of the website to fetch and summarize"
                }
            },
            "required": [
                "url"
            ]
        }
    },
    {
        "name": "code_execution",
        "description": "Execute code in a secure sandbox environment. This tool can run Python scripts, JavaScript code, bash commands, perform data analysis, and handle complex calculations. Use this tool when users ask to run code, analyze data, perform calculations, or any task that requires computational work. The tool supports multiple programming languages and returns execution results including output, and errors.",
        "input_schema": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "The code to execute"
                },
                "language": {
                    "type": "string",
                    "description": "The programming language (python, javascript, bash, etc.). Defaults to python if not specified.",
                    "enum": ["python", "py", "javascript", "js", "node", "bash", "shell", "sh"]
                }
            },
            "required": [
                "code"
            ]
        }
    }
]
